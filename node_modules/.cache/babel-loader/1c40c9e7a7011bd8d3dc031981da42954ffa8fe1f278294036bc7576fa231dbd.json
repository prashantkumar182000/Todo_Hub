{"ast":null,"code":"import React,{useState}from\"react\";import AddEditBoardModal from\"../modals/AddEditBoardModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EmptyBoard(_ref){let{type}=_ref;const[isBoardModalOpen,setIsBoardModalOpen]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\" bg-white dark:bg-[#2b2c37] h-screen w-screen flex flex-col  items-center justify-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\" text-gray-500 font-bold\",children:type===\"edit\"?\"This board is empty. Create a new column to get started.\":\"There are no boards available. Create a new board to get started\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsBoardModalOpen(true);},className:\"w-full items-center max-w-xs font-bold hover:opacity-70 dark:text-white dark:bg-[#635fc7] mt-8 relative  text-white bg-[#635fc7] py-2 rounded-full\",children:type===\"edit\"?\"+ Add New Column\":\"+ Add New Board\"}),isBoardModalOpen&&/*#__PURE__*/_jsx(AddEditBoardModal,{type:type,setIsBoardModalOpen:setIsBoardModalOpen})]});}export default EmptyBoard;","map":{"version":3,"names":["React","useState","AddEditBoardModal","jsx","_jsx","jsxs","_jsxs","EmptyBoard","_ref","type","isBoardModalOpen","setIsBoardModalOpen","className","children","onClick"],"sources":["/home/user/React/Todo-Hub/src/components/EmptyBoard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\n\nfunction EmptyBoard({ type }) {\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  return (\n    <div className=\" bg-white dark:bg-[#2b2c37] h-screen w-screen flex flex-col  items-center justify-center\">\n      <h3 className=\" text-gray-500 font-bold\">\n        {type === \"edit\"\n          ? \"This board is empty. Create a new column to get started.\"\n          : \"There are no boards available. Create a new board to get started\"}\n      </h3>\n      <button\n        onClick={() => {\n          setIsBoardModalOpen(true);\n        }}\n        className=\"w-full items-center max-w-xs font-bold hover:opacity-70 dark:text-white dark:bg-[#635fc7] mt-8 relative  text-white bg-[#635fc7] py-2 rounded-full\"\n      >\n        {type === \"edit\" ? \"+ Add New Column\" : \"+ Add New Board\"}\n      </button>\n      {isBoardModalOpen && (\n        <AddEditBoardModal\n          type={type}\n          setIsBoardModalOpen={setIsBoardModalOpen}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EmptyBoard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,iBAAiB,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5D,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAW,IAAV,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAACE,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC/D,mBACEK,KAAA,QAAKM,SAAS,CAAC,0FAA0F,CAAAC,QAAA,eACvGT,IAAA,OAAIQ,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACrCJ,IAAI,GAAK,MAAM,CACZ,0DAA0D,CAC1D,kEAAkE,EACnE,cACLL,IAAA,WACEU,OAAO,CAAEA,CAAA,GAAM,CACbH,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CACFC,SAAS,CAAC,oJAAoJ,CAAAC,QAAA,CAE7JJ,IAAI,GAAK,MAAM,CAAG,kBAAkB,CAAG,iBAAiB,EAClD,CACRC,gBAAgB,eACfN,IAAA,CAACF,iBAAiB,EAChBO,IAAI,CAAEA,IAAK,CACXE,mBAAmB,CAAEA,mBAAoB,EAE5C,GACG,CAEV,CAEA,cAAe,CAAAJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}