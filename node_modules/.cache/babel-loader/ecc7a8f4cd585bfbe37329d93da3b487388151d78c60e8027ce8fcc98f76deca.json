{"ast":null,"code":"import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import Header from\"./components/Header\";import Home from\"./components/Home\";import EmptyBoard from'./components/EmptyBoard';import boardsSlice from\"./redux/boardsSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isBoardModalOpen,setIsBoardModalOpen]=useState(false);const dispatch=useDispatch();const boards=useSelector(state=>state.boards);const activeBoard=boards.find(board=>board.isActive);if(!activeBoard&&boards.length>0)dispatch(boardsSlice.actions.setBoardActive({index:0}));return/*#__PURE__*/_jsx(\"div\",{className:\" overflow-hidden  overflow-x-scroll\",children:/*#__PURE__*/_jsx(_Fragment,{children:boards.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{setIsBoardModalOpen:setIsBoardModalOpen,isBoardModalOpen:isBoardModalOpen}),/*#__PURE__*/_jsx(Home,{setIsBoardModalOpen:setIsBoardModalOpen,isBoardModalOpen:isBoardModalOpen})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(EmptyBoard,{type:\"add\"})})})});}export default App;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Header","Home","EmptyBoard","boardsSlice","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","isBoardModalOpen","setIsBoardModalOpen","dispatch","boards","state","activeBoard","find","board","isActive","length","actions","setBoardActive","index","className","children","type"],"sources":["/home/user/React/Todo-Hub/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport EmptyBoard from './components/EmptyBoard';\nimport boardsSlice from \"./redux/boardsSlice\";\n\nfunction App() {\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const boards = useSelector((state) => state.boards);\n  const activeBoard = boards.find((board) => board.isActive);\n  if (!activeBoard && boards.length > 0)\n    dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\n  return (\n    <div className=\" overflow-hidden  overflow-x-scroll\">\n      <>\n        {boards.length > 0 ?\n        <>\n        <Header\n          setIsBoardModalOpen={setIsBoardModalOpen}\n          isBoardModalOpen={isBoardModalOpen}\n        />\n        <Home\n          setIsBoardModalOpen={setIsBoardModalOpen}\n          isBoardModalOpen={isBoardModalOpen}\n        />\n        </>\n        :\n        <>\n          <EmptyBoard type='add'/>\n        </>\n      }\n        \n      </>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAAgB,QAAQ,CAAGf,WAAW,EAAE,CAC9B,KAAM,CAAAgB,MAAM,CAAGf,WAAW,CAAEgB,KAAK,EAAKA,KAAK,CAACD,MAAM,CAAC,CACnD,KAAM,CAAAE,WAAW,CAAGF,MAAM,CAACG,IAAI,CAAEC,KAAK,EAAKA,KAAK,CAACC,QAAQ,CAAC,CAC1D,GAAI,CAACH,WAAW,EAAIF,MAAM,CAACM,MAAM,CAAG,CAAC,CACnCP,QAAQ,CAACV,WAAW,CAACkB,OAAO,CAACC,cAAc,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,CAAC,CAC5D,mBACElB,IAAA,QAAKmB,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cAClDpB,IAAA,CAAAE,SAAA,EAAAkB,QAAA,CACGX,MAAM,CAACM,MAAM,CAAG,CAAC,cAClBX,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eACApB,IAAA,CAACL,MAAM,EACLY,mBAAmB,CAAEA,mBAAoB,CACzCD,gBAAgB,CAAEA,gBAAiB,EACnC,cACFN,IAAA,CAACJ,IAAI,EACHW,mBAAmB,CAAEA,mBAAoB,CACzCD,gBAAgB,CAAEA,gBAAiB,EACnC,GACC,cAEHN,IAAA,CAAAE,SAAA,EAAAkB,QAAA,cACEpB,IAAA,CAACH,UAAU,EAACwB,IAAI,CAAC,KAAK,EAAE,EACvB,EAGF,EACC,CAEV,CAEA,cAAe,CAAAhB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}